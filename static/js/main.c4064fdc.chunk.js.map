{"version":3,"sources":["styles/global.js","pages/Home/styles.js","components/Container/index.js","store/modules/movie/types.js","store/modules/movie/actions.js","pages/Home/index.js","pages/Movie/styles.js","pages/Movie/index.js","routes.js","store/modules/movie/reducer.js","store/modules/rootReducer.js","services/api.js","store/modules/movie/sagas.js","store/modules/rootSaga.js","store/index.js","App.js","serviceWorker.js","index.js"],"names":["createGlobalStyle","_templateObject","Form","styled","form","styles_templateObject","rotate","keyframes","_templateObject2","SubmitButton","button","attrs","props","type","disabled","loading","_templateObject3","css","_templateObject4","List","ul","_templateObject5","Container","div","Container_templateObject","ADD_REQUEST","ADD_SUCCESS","ADD_FAILED","REMOVE","addMovieRequest","title","Types","addMovieFailed","movie","Home","_useState","useState","_useState2","Object","slicedToArray","newMovie","setNewMovie","movies","useSelector","state","data","dispatch","useDispatch","react_default","a","createElement","components_Container","index_esm","onSubmit","e","preventDefault","placeholder","value","onChange","target","color","size","map","key","Title","react_router_dom","to","concat","encodeURIComponent","onClick","Loading","Movie_styles_templateObject","Header","header","styles_templateObject2","TableDetails","styles_templateObject3","RatingList","styles_templateObject4","Movie","_ref","match","movieName","decodeURIComponent","params","find","m","useEffect","src","Poster","alt","Year","Plot","Director","Actors","Released","Runtime","Ratings","rating","String","Source","Value","Routes","react_router","path","exact","component","INITIAL_STATE","combineReducers","arguments","length","undefined","action","produce","draft","push","movieIndex","findIndex","splice","api","axios","create","baseURL","addMovie","response","regenerator_default","wrap","_context","prev","next","select","sent","abrupt","call","get","Error","toast","warning","put","t0","error","finish","stop","_marked","all","takeLatest","rootSaga","rootSaga_marked","sagaMiddleware","createSagaMiddleware","sagaMonitor","enhancer","applyMiddleware","store","createStore","rootReducer","run","App","es","global","react_toastify","autoClose","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c4064fdc.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default createGlobalStyle`\n  * {\n    margin:0;\n    padding:0;\n    outline:0;\n    box-sizing: border-box;\n  }\n\n  html, body, #root {\n    height: 100%;\n  }\n\n  body {\n    background: #141f35;\n    -webkit-font-smoothing: antialiased !important;\n  }\n\n  body,input,button {\n    color: #222;\n    font-size: 14px;\n    font-family: Arial, Helvetica, sans-serif;\n  }\n\n  button{\n    cursor: pointer;\n  }\n`;\n","import styled, { keyframes, css } from 'styled-components';\n\nexport const Form = styled.form`\n  margin-top: 30px;\n  display: flex;\n  flex-direction: row;\n\n  input {\n    flex: 1;\n    border: 1px solid #eee;\n    padding: 10px 15px;\n    border-radius: 4px;\n    font-size: 16px;\n  }\n`;\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nexport const SubmitButton = styled.button.attrs(props => ({\n  type: 'submit',\n  disabled: props.loading,\n}))`\n  background: #141f35;\n  border: 0;\n  padding: 0 15px;\n  margin-left: 10px;\n  border-radius: 4px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  &[disabled] {\n    cursor: not-allowed;\n    opacity: 0.6;\n  }\n\n  ${props =>\n    props.loading &&\n    css`\n      svg {\n        animation: ${rotate} 2s linear infinite;\n      }\n    `}\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n  margin-top: 30px;\n\n  li {\n    padding: 15px 0;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n\n    & + li {\n      border-top: 1px solid #eee;\n    }\n\n    span {\n      color: #999;\n    }\n\n    div {\n      align-items: center;\n      display: flex;\n\n      a {\n        color: #9966ff;\n        text-decoration: none;\n        margin-right: 15px;\n      }\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  max-width: 700px;\n  background: #fff;\n  border-radius: 4px;\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);\n  padding: 30px;\n  margin: 80px auto;\n\n  h1 {\n    font-size: 20px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n\n    svg {\n      margin-right: 10px;\n    }\n  }\n`;\n\nexport default Container;\n","/**\n * Action Types\n */\n\nexport const ADD_REQUEST = '@movie/ADD_REQUEST';\nexport const ADD_SUCCESS = '@movie/ADD_SUCCESS';\nexport const ADD_FAILED = '@movie/ADD_FAILED';\nexport const REMOVE = '@movie/REMOVE';\n","import * as Types from './types';\n\nexport function addMovieRequest(title) {\n  return {\n    type: Types.ADD_REQUEST,\n    title,\n  };\n}\n\nexport function addMovieSuccess(movie) {\n  return {\n    type: Types.ADD_SUCCESS,\n    movie,\n  };\n}\n\nexport function addMovieFailed(movie) {\n  return {\n    type: Types.ADD_FAILED,\n    movie,\n  };\n}\n\nexport function removeMovie(title) {\n  return {\n    type: Types.REMOVE,\n    title,\n  };\n}\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { FaTrash, FaFilm, FaPlus, FaSpinner } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\nimport { Form, SubmitButton, List } from './styles';\nimport Container from '../../components/Container';\nimport {\n  addMovieRequest,\n  removeMovie,\n} from '../../store/modules/movie/actions';\n\nexport default function Home() {\n  const [newMovie, setNewMovie] = useState('');\n  const movies = useSelector(state => state.movie.data);\n  const loading = useSelector(state => state.movie.loading);\n\n  const dispatch = useDispatch();\n\n  function handleInputChange(e) {\n    setNewMovie(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    dispatch(addMovieRequest(newMovie));\n    setNewMovie('');\n  }\n\n  return (\n    <Container>\n      <h1>\n        <FaFilm />\n        Filmes\n      </h1>\n\n      <Form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Procurar Filme\"\n          value={newMovie}\n          onChange={handleInputChange}\n        />\n\n        <SubmitButton loading={loading}>\n          {loading ? (\n            <FaSpinner color=\"#FFF\" size={14} />\n          ) : (\n            <FaPlus color=\"#FFF\" size={14} />\n          )}\n        </SubmitButton>\n      </Form>\n\n      <List>\n        {movies.map(movie => (\n          <li key={movie.Title}>\n            <span>{movie.Title}</span>\n            <div>\n              <Link to={`/movie/${encodeURIComponent(movie.Title)}`}>\n                Detalhes\n              </Link>\n              <FaTrash\n                size={14}\n                color=\"#9966ff\"\n                onClick={() => dispatch(removeMovie(movie.Title))}\n              />\n            </div>\n          </li>\n        ))}\n      </List>\n    </Container>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Loading = styled.div`\n  color: #fff;\n  font-size: 30px;\n  font-weight: bold;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\n\nexport const Header = styled.header`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  a {\n    color: #9966ff;\n    font-size: 16px;\n    text-decoration: none;\n  }\n\n  div {\n    display: flex;\n    align-items: center;\n    flex: 1;\n\n    img {\n      width: 120px;\n      border-radius: 4px;\n      margin-top: 20px;\n      margin-right: 15px;\n    }\n\n    div {\n      display: flex;\n      flex-direction: column;\n\n      h1 {\n        font-size: 24px;\n        margin-top: 10px;\n      }\n\n      p {\n        margin-top: 5px;\n        font-size: 14px;\n        color: #666;\n        line-height: 1.4;\n        text-align: center;\n        max-width: 400px;\n      }\n    }\n  }\n`;\n\nexport const TableDetails = styled.div`\n  margin-top: 40px;\n\n  table {\n    border: 1px solid #eee;\n    border-radius: 4px;\n\n    tr th,\n    tr td {\n      text-align: left;\n      padding: 2px 6px;\n    }\n  }\n`;\n\nexport const RatingList = styled.ul`\n  padding-top: 15px;\n  margin-top: 30px;\n  border-top: 1px solid #eee;\n  list-style: none;\n\n  h1 {\n    display: block;\n    margin-bottom: 15px;\n  }\n\n  li {\n    display: flex;\n    padding: 15px 10px;\n    border: 1px solid #eee;\n    border-radius: 4px;\n\n    & + li {\n      margin-top: 10px;\n    }\n\n    div {\n      flex: 1;\n      margin-left: 15px;\n\n      strong {\n        font-size: 16px;\n        color: #333;\n\n          &:hover {\n            color: #9966ff;\n          }\n        }\n\n        span {\n          background: #eee;\n          color: #333;\n          border-radius: 2px;\n          font-size: 12px;\n          font-weight: 600;\n          height: 20px;\n          padding: 4px 5px;\n          margin-left: 10px;\n        }\n      }\n      p {\n        margin-top: 5px;\n        font-size: 12px;\n        background: #eee;\n        color: #333;\n        border-radius: 4px;\n        padding: 2px 3px;\n      }\n    }\n  }\n`;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport Container from '../../components/Container';\nimport { Header, RatingList, TableDetails, Loading } from './styles';\nimport { addMovieRequest } from '../../store/modules/movie/actions';\n\nexport default function Movie({ match }) {\n  const movieName = decodeURIComponent(match.params.movie);\n  const movie = useSelector(state =>\n    state.movie.data.find(m => m.Title === movieName)\n  );\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!movie) {\n      dispatch(addMovieRequest(movieName));\n    }\n  });\n\n  if (!movie) {\n    return <Loading>Carregando</Loading>;\n  }\n\n  return (\n    <Container>\n      <Header>\n        <Link to=\"/\">Voltar aos filmes</Link>\n        <div>\n          <img src={movie.Poster} alt={movie.Title} />\n          <div>\n            <h1>\n              {movie.Title} - {movie.Year}\n            </h1>\n            <p>{movie.Plot}</p>\n          </div>\n        </div>\n\n        <TableDetails>\n          <table>\n            <tbody>\n              <tr>\n                <th>Diretor</th>\n                <td>{movie.Director}</td>\n              </tr>\n              <tr>\n                <th>Estrelas</th>\n                <td>{movie.Actors}</td>\n              </tr>\n              <tr>\n                <th>Lançamento</th>\n                <td>{movie.Released}</td>\n              </tr>\n              <tr>\n                <th>Duração</th>\n                <td>{movie.Runtime}</td>\n              </tr>\n            </tbody>\n          </table>\n        </TableDetails>\n      </Header>\n\n      <RatingList>\n        <h1> Rating </h1>\n        {movie.Ratings.map(rating => (\n          <li key={String(rating.Source)}>\n            <div>\n              <strong>\n                {rating.Source}\n                <span>{rating.Value}</span>\n              </strong>\n            </div>\n          </li>\n        ))}\n      </RatingList>\n    </Container>\n  );\n}\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Movie from './pages/Movie';\n\nexport default function Routes() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/movie/:movie\" component={Movie} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n","import produce from 'immer';\nimport * as Types from './types';\n\nconst INITIAL_STATE = {\n  data: [],\n  loading: false,\n};\n\nexport default function movie(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case Types.ADD_REQUEST:\n      return produce(state, draft => {\n        draft.loading = true;\n      });\n\n    case Types.ADD_SUCCESS:\n      return produce(state, draft => {\n        const { movie } = action;\n        draft.data.push(movie);\n        draft.loading = false;\n      });\n\n    case Types.ADD_FAILED:\n      return produce(state, draft => {\n        draft.loading = false;\n      });\n\n    case Types.REMOVE:\n      return produce(state, draft => {\n        const movieIndex = draft.data.findIndex(m => m.Title === action.title);\n\n        if (movieIndex >= 0) {\n          draft.data.splice(movieIndex, 1);\n        }\n      });\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\n\nimport movie from './movie/reducer';\n\nexport default combineReducers({\n  movie,\n});\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'http://www.omdbapi.com',\n});\n\nexport default api;\n","import { call, select, put, all, takeLatest } from 'redux-saga/effects';\nimport * as Types from './types';\nimport { toast } from 'react-toastify';\nimport api from '../../../services/api';\nimport { addMovieSuccess, addMovieFailed } from './actions';\n\nfunction* addMovie({ title }) {\n  const movieExists = yield select(state =>\n    state.movie.data.find(m => m.title === title)\n  );\n\n  if (movieExists) return;\n  try {\n    const response = yield call(api.get, `?apikey=eebcf44c&t=${title}`);\n    if (response.data.Error) {\n      toast.warning('Filme não encontrado!');\n      return;\n    }\n\n    yield put(addMovieSuccess(response.data));\n  } catch (e) {\n    toast.error('Oopps... Alguma coisa deu errado.');\n  } finally {\n    yield put(addMovieFailed());\n  }\n}\n\nexport default all([takeLatest(Types.ADD_REQUEST, addMovie)]);\n","import { all } from 'redux-saga/effects';\nimport movie from './movie/sagas';\n\nexport default function* rootSaga() {\n  return yield all([movie]);\n}\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducer from './modules/rootReducer';\nimport rootSaga from './modules/rootSaga';\n\nconst sagaMonitor =\n  process.env.NODE_ENV === 'development'\n    ? console.tron.createSagaMonitor()\n    : null;\n\nconst sagaMiddleware = createSagaMiddleware({\n  sagaMonitor,\n});\n\nconst enhancer =\n  process.env.NODE_ENV === 'development'\n    ? compose(\n        console.tron.createEnhancer(),\n        applyMiddleware(sagaMiddleware)\n      )\n    : applyMiddleware(sagaMiddleware);\n\nconst store = createStore(rootReducer, enhancer);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\n\nimport './config/ReactotronConfig';\n\nimport GlobalStyle from './styles/global';\nimport Routes from './routes';\nimport store from './store';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Routes />\n      <GlobalStyle />\n      <ToastContainer autoClose={3000} />\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}